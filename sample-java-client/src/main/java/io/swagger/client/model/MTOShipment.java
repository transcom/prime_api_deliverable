/*
 * Milmove Prime API
 * The Prime API is a RESTful API that enables the Prime contractor to request information about upcoming moves, update the details and status of those moves, and make payment requests. It uses Mutual TLS for authentication procedures.  All endpoints are located at `primelocal/prime/v1/`. 
 *
 * OpenAPI spec version: 0.0.1
 * Contact: dp3@truss.works
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Address;
import io.swagger.client.model.MTOAgents;
import io.swagger.client.model.MTOShipmentType;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.LocalDate;

/**
 * MTOShipment
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-15T13:04:32.719-07:00")
public class MTOShipment {
  @SerializedName("moveTaskOrderID")
  private UUID moveTaskOrderID = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("updatedAt")
  private String updatedAt = null;

  @SerializedName("approvedDate")
  private LocalDate approvedDate = null;

  @SerializedName("scheduledPickupDate")
  private LocalDate scheduledPickupDate = null;

  @SerializedName("requestedPickupDate")
  private LocalDate requestedPickupDate = null;

  @SerializedName("firstAvailableDeliveryDate")
  private LocalDate firstAvailableDeliveryDate = null;

  @SerializedName("primeActualWeight")
  private Integer primeActualWeight = null;

  @SerializedName("primeEstimatedWeight")
  private Integer primeEstimatedWeight = null;

  @SerializedName("primeEstimatedWeightRecordedDate")
  private LocalDate primeEstimatedWeightRecordedDate = null;

  @SerializedName("actualPickupDate")
  private LocalDate actualPickupDate = null;

  @SerializedName("requiredDeliveryDate")
  private LocalDate requiredDeliveryDate = null;

  @SerializedName("agents")
  private MTOAgents agents = null;

  @SerializedName("customerRemarks")
  private String customerRemarks = null;

  @SerializedName("shipmentType")
  private MTOShipmentType shipmentType = null;

  @SerializedName("pickupAddress")
  private Address pickupAddress = null;

  @SerializedName("destinationAddress")
  private Address destinationAddress = null;

  @SerializedName("secondaryPickupAddress")
  private Address secondaryPickupAddress = null;

  @SerializedName("secondaryDeliveryAddress")
  private Address secondaryDeliveryAddress = null;

  @SerializedName("eTag")
  private String eTag = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    APPROVED("APPROVED"),
    
    SUBMITTED("SUBMITTED"),
    
    REJECTED("REJECTED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("rejectionReason")
  private String rejectionReason = null;

  @SerializedName("pointOfContact")
  private String pointOfContact = null;

   /**
   * Get moveTaskOrderID
   * @return moveTaskOrderID
  **/
  @ApiModelProperty(example = "1f2270c7-7166-40ae-981e-b200ebdf3054", value = "")
  public UUID getMoveTaskOrderID() {
    return moveTaskOrderID;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "1f2270c7-7166-40ae-981e-b200ebdf3054", value = "")
  public UUID getId() {
    return id;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

   /**
   * date when the shipment was given the status \&quot;APPROVED\&quot;
   * @return approvedDate
  **/
  @ApiModelProperty(value = "date when the shipment was given the status \"APPROVED\"")
  public LocalDate getApprovedDate() {
    return approvedDate;
  }

  public MTOShipment scheduledPickupDate(LocalDate scheduledPickupDate) {
    this.scheduledPickupDate = scheduledPickupDate;
    return this;
  }

   /**
   * Get scheduledPickupDate
   * @return scheduledPickupDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getScheduledPickupDate() {
    return scheduledPickupDate;
  }

  public void setScheduledPickupDate(LocalDate scheduledPickupDate) {
    this.scheduledPickupDate = scheduledPickupDate;
  }

   /**
   * Get requestedPickupDate
   * @return requestedPickupDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getRequestedPickupDate() {
    return requestedPickupDate;
  }

  public MTOShipment firstAvailableDeliveryDate(LocalDate firstAvailableDeliveryDate) {
    this.firstAvailableDeliveryDate = firstAvailableDeliveryDate;
    return this;
  }

   /**
   * Get firstAvailableDeliveryDate
   * @return firstAvailableDeliveryDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getFirstAvailableDeliveryDate() {
    return firstAvailableDeliveryDate;
  }

  public void setFirstAvailableDeliveryDate(LocalDate firstAvailableDeliveryDate) {
    this.firstAvailableDeliveryDate = firstAvailableDeliveryDate;
  }

  public MTOShipment primeActualWeight(Integer primeActualWeight) {
    this.primeActualWeight = primeActualWeight;
    return this;
  }

   /**
   * Get primeActualWeight
   * @return primeActualWeight
  **/
  @ApiModelProperty(example = "4500", value = "")
  public Integer getPrimeActualWeight() {
    return primeActualWeight;
  }

  public void setPrimeActualWeight(Integer primeActualWeight) {
    this.primeActualWeight = primeActualWeight;
  }

  public MTOShipment primeEstimatedWeight(Integer primeEstimatedWeight) {
    this.primeEstimatedWeight = primeEstimatedWeight;
    return this;
  }

   /**
   * Get primeEstimatedWeight
   * @return primeEstimatedWeight
  **/
  @ApiModelProperty(example = "4500", value = "")
  public Integer getPrimeEstimatedWeight() {
    return primeEstimatedWeight;
  }

  public void setPrimeEstimatedWeight(Integer primeEstimatedWeight) {
    this.primeEstimatedWeight = primeEstimatedWeight;
  }

   /**
   * Get primeEstimatedWeightRecordedDate
   * @return primeEstimatedWeightRecordedDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getPrimeEstimatedWeightRecordedDate() {
    return primeEstimatedWeightRecordedDate;
  }

  public MTOShipment actualPickupDate(LocalDate actualPickupDate) {
    this.actualPickupDate = actualPickupDate;
    return this;
  }

   /**
   * Get actualPickupDate
   * @return actualPickupDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getActualPickupDate() {
    return actualPickupDate;
  }

  public void setActualPickupDate(LocalDate actualPickupDate) {
    this.actualPickupDate = actualPickupDate;
  }

   /**
   * Get requiredDeliveryDate
   * @return requiredDeliveryDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getRequiredDeliveryDate() {
    return requiredDeliveryDate;
  }

  public MTOShipment agents(MTOAgents agents) {
    this.agents = agents;
    return this;
  }

   /**
   * Get agents
   * @return agents
  **/
  @ApiModelProperty(value = "")
  public MTOAgents getAgents() {
    return agents;
  }

  public void setAgents(MTOAgents agents) {
    this.agents = agents;
  }

   /**
   * Get customerRemarks
   * @return customerRemarks
  **/
  @ApiModelProperty(example = "handle with care", value = "")
  public String getCustomerRemarks() {
    return customerRemarks;
  }

  public MTOShipment shipmentType(MTOShipmentType shipmentType) {
    this.shipmentType = shipmentType;
    return this;
  }

   /**
   * Get shipmentType
   * @return shipmentType
  **/
  @ApiModelProperty(value = "")
  public MTOShipmentType getShipmentType() {
    return shipmentType;
  }

  public void setShipmentType(MTOShipmentType shipmentType) {
    this.shipmentType = shipmentType;
  }

  public MTOShipment pickupAddress(Address pickupAddress) {
    this.pickupAddress = pickupAddress;
    return this;
  }

   /**
   * Get pickupAddress
   * @return pickupAddress
  **/
  @ApiModelProperty(value = "")
  public Address getPickupAddress() {
    return pickupAddress;
  }

  public void setPickupAddress(Address pickupAddress) {
    this.pickupAddress = pickupAddress;
  }

  public MTOShipment destinationAddress(Address destinationAddress) {
    this.destinationAddress = destinationAddress;
    return this;
  }

   /**
   * Get destinationAddress
   * @return destinationAddress
  **/
  @ApiModelProperty(value = "")
  public Address getDestinationAddress() {
    return destinationAddress;
  }

  public void setDestinationAddress(Address destinationAddress) {
    this.destinationAddress = destinationAddress;
  }

  public MTOShipment secondaryPickupAddress(Address secondaryPickupAddress) {
    this.secondaryPickupAddress = secondaryPickupAddress;
    return this;
  }

   /**
   * Get secondaryPickupAddress
   * @return secondaryPickupAddress
  **/
  @ApiModelProperty(value = "")
  public Address getSecondaryPickupAddress() {
    return secondaryPickupAddress;
  }

  public void setSecondaryPickupAddress(Address secondaryPickupAddress) {
    this.secondaryPickupAddress = secondaryPickupAddress;
  }

  public MTOShipment secondaryDeliveryAddress(Address secondaryDeliveryAddress) {
    this.secondaryDeliveryAddress = secondaryDeliveryAddress;
    return this;
  }

   /**
   * Get secondaryDeliveryAddress
   * @return secondaryDeliveryAddress
  **/
  @ApiModelProperty(value = "")
  public Address getSecondaryDeliveryAddress() {
    return secondaryDeliveryAddress;
  }

  public void setSecondaryDeliveryAddress(Address secondaryDeliveryAddress) {
    this.secondaryDeliveryAddress = secondaryDeliveryAddress;
  }

   /**
   * Get eTag
   * @return eTag
  **/
  @ApiModelProperty(value = "")
  public String getETag() {
    return eTag;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

   /**
   * Get rejectionReason
   * @return rejectionReason
  **/
  @ApiModelProperty(example = "MTO Shipment not good enough", value = "")
  public String getRejectionReason() {
    return rejectionReason;
  }

  public MTOShipment pointOfContact(String pointOfContact) {
    this.pointOfContact = pointOfContact;
    return this;
  }

   /**
   * Email or id of a contact person for this update.
   * @return pointOfContact
  **/
  @ApiModelProperty(value = "Email or id of a contact person for this update.")
  public String getPointOfContact() {
    return pointOfContact;
  }

  public void setPointOfContact(String pointOfContact) {
    this.pointOfContact = pointOfContact;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MTOShipment mtOShipment = (MTOShipment) o;
    return Objects.equals(this.moveTaskOrderID, mtOShipment.moveTaskOrderID) &&
        Objects.equals(this.id, mtOShipment.id) &&
        Objects.equals(this.createdAt, mtOShipment.createdAt) &&
        Objects.equals(this.updatedAt, mtOShipment.updatedAt) &&
        Objects.equals(this.approvedDate, mtOShipment.approvedDate) &&
        Objects.equals(this.scheduledPickupDate, mtOShipment.scheduledPickupDate) &&
        Objects.equals(this.requestedPickupDate, mtOShipment.requestedPickupDate) &&
        Objects.equals(this.firstAvailableDeliveryDate, mtOShipment.firstAvailableDeliveryDate) &&
        Objects.equals(this.primeActualWeight, mtOShipment.primeActualWeight) &&
        Objects.equals(this.primeEstimatedWeight, mtOShipment.primeEstimatedWeight) &&
        Objects.equals(this.primeEstimatedWeightRecordedDate, mtOShipment.primeEstimatedWeightRecordedDate) &&
        Objects.equals(this.actualPickupDate, mtOShipment.actualPickupDate) &&
        Objects.equals(this.requiredDeliveryDate, mtOShipment.requiredDeliveryDate) &&
        Objects.equals(this.agents, mtOShipment.agents) &&
        Objects.equals(this.customerRemarks, mtOShipment.customerRemarks) &&
        Objects.equals(this.shipmentType, mtOShipment.shipmentType) &&
        Objects.equals(this.pickupAddress, mtOShipment.pickupAddress) &&
        Objects.equals(this.destinationAddress, mtOShipment.destinationAddress) &&
        Objects.equals(this.secondaryPickupAddress, mtOShipment.secondaryPickupAddress) &&
        Objects.equals(this.secondaryDeliveryAddress, mtOShipment.secondaryDeliveryAddress) &&
        Objects.equals(this.eTag, mtOShipment.eTag) &&
        Objects.equals(this.status, mtOShipment.status) &&
        Objects.equals(this.rejectionReason, mtOShipment.rejectionReason) &&
        Objects.equals(this.pointOfContact, mtOShipment.pointOfContact);
  }

  @Override
  public int hashCode() {
    return Objects.hash(moveTaskOrderID, id, createdAt, updatedAt, approvedDate, scheduledPickupDate, requestedPickupDate, firstAvailableDeliveryDate, primeActualWeight, primeEstimatedWeight, primeEstimatedWeightRecordedDate, actualPickupDate, requiredDeliveryDate, agents, customerRemarks, shipmentType, pickupAddress, destinationAddress, secondaryPickupAddress, secondaryDeliveryAddress, eTag, status, rejectionReason, pointOfContact);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MTOShipment {\n");
    
    sb.append("    moveTaskOrderID: ").append(toIndentedString(moveTaskOrderID)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    approvedDate: ").append(toIndentedString(approvedDate)).append("\n");
    sb.append("    scheduledPickupDate: ").append(toIndentedString(scheduledPickupDate)).append("\n");
    sb.append("    requestedPickupDate: ").append(toIndentedString(requestedPickupDate)).append("\n");
    sb.append("    firstAvailableDeliveryDate: ").append(toIndentedString(firstAvailableDeliveryDate)).append("\n");
    sb.append("    primeActualWeight: ").append(toIndentedString(primeActualWeight)).append("\n");
    sb.append("    primeEstimatedWeight: ").append(toIndentedString(primeEstimatedWeight)).append("\n");
    sb.append("    primeEstimatedWeightRecordedDate: ").append(toIndentedString(primeEstimatedWeightRecordedDate)).append("\n");
    sb.append("    actualPickupDate: ").append(toIndentedString(actualPickupDate)).append("\n");
    sb.append("    requiredDeliveryDate: ").append(toIndentedString(requiredDeliveryDate)).append("\n");
    sb.append("    agents: ").append(toIndentedString(agents)).append("\n");
    sb.append("    customerRemarks: ").append(toIndentedString(customerRemarks)).append("\n");
    sb.append("    shipmentType: ").append(toIndentedString(shipmentType)).append("\n");
    sb.append("    pickupAddress: ").append(toIndentedString(pickupAddress)).append("\n");
    sb.append("    destinationAddress: ").append(toIndentedString(destinationAddress)).append("\n");
    sb.append("    secondaryPickupAddress: ").append(toIndentedString(secondaryPickupAddress)).append("\n");
    sb.append("    secondaryDeliveryAddress: ").append(toIndentedString(secondaryDeliveryAddress)).append("\n");
    sb.append("    eTag: ").append(toIndentedString(eTag)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    rejectionReason: ").append(toIndentedString(rejectionReason)).append("\n");
    sb.append("    pointOfContact: ").append(toIndentedString(pointOfContact)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

