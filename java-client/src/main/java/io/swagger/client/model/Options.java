/*
 * move.mil Prime API
 * The API for move.mil Prime actions.
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Options
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-10-07T19:09:34.737Z")
public class Options {
  @SerializedName("isPPM")
  private Boolean isPPM = null;

  @SerializedName("hasExcess")
  private Boolean hasExcess = null;

  public Options isPPM(Boolean isPPM) {
    this.isPPM = isPPM;
    return this;
  }

   /**
   * Get isPPM
   * @return isPPM
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsPPM() {
    return isPPM;
  }

  public void setIsPPM(Boolean isPPM) {
    this.isPPM = isPPM;
  }

  public Options hasExcess(Boolean hasExcess) {
    this.hasExcess = hasExcess;
    return this;
  }

   /**
   * Get hasExcess
   * @return hasExcess
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasExcess() {
    return hasExcess;
  }

  public void setHasExcess(Boolean hasExcess) {
    this.hasExcess = hasExcess;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Options options = (Options) o;
    return Objects.equals(this.isPPM, options.isPPM) &&
        Objects.equals(this.hasExcess, options.hasExcess);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isPPM, hasExcess);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Options {\n");
    
    sb.append("    isPPM: ").append(toIndentedString(isPPM)).append("\n");
    sb.append("    hasExcess: ").append(toIndentedString(hasExcess)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

