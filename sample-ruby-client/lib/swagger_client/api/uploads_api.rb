=begin
#move.mil API

#The Prime API for move.mil

OpenAPI spec version: 0.0.1
Contact: dp3@truss.works
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'uri'

module SwaggerClient
  class UploadsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a new upload for a payment request
    # Uploads represent a single digital file, such as a JPEG, PNG, or PDF.
    # @param payment_request_id UUID of payment request to use.
    # @param file The file to upload.
    # @param [Hash] opts the optional parameters
    # @return [Upload]
    def create_upload(payment_request_id, file, opts = {})
      data, _status_code, _headers = create_upload_with_http_info(payment_request_id, file, opts)
      data
    end

    # Create a new upload for a payment request
    # Uploads represent a single digital file, such as a JPEG, PNG, or PDF.
    # @param payment_request_id UUID of payment request to use.
    # @param file The file to upload.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Upload, Fixnum, Hash)>] Upload data, response status code and response headers
    def create_upload_with_http_info(payment_request_id, file, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: UploadsApi.create_upload ...'
      end
      # verify the required parameter 'payment_request_id' is set
      if @api_client.config.client_side_validation && payment_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'payment_request_id' when calling UploadsApi.create_upload"
      end
      # verify the required parameter 'file' is set
      if @api_client.config.client_side_validation && file.nil?
        fail ArgumentError, "Missing the required parameter 'file' when calling UploadsApi.create_upload"
      end
      # resource path
      local_var_path = '/payment-requests/{paymentRequestID}/uploads'.sub('{' + 'paymentRequestID' + '}', payment_request_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['multipart/form-data'])

      # form parameters
      form_params = {}
      form_params['file'] = file

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Upload')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UploadsApi#create_upload\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
