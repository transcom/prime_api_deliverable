=begin
#move.mil API

#The Prime API for move.mil

OpenAPI spec version: 0.0.1
Contact: dp3@truss.works
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::MoveTaskOrderApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MoveTaskOrderApi' do
  before do
    # run before each test
    @instance = SwaggerClient::MoveTaskOrderApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MoveTaskOrderApi' do
    it 'should create an instance of MoveTaskOrderApi' do
      expect(@instance).to be_instance_of(SwaggerClient::MoveTaskOrderApi)
    end
  end

  # unit tests for fetch_mto_updates
  # Gets all move task orders where &#x60;isAvailableToPrime&#x60; is TRUE
  # Gets all move task orders where &#x60;isAvailableToPrime&#x60; is TRUE. This prevents viewing any move task orders that have not been made available to the Prime. 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :since Only return move task orders updated since this time.
  # @return [MoveTaskOrders]
  describe 'fetch_mto_updates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_move_task_order_customer
  # Gets the customer associated with a move task order ID
  # Gets the customer associated with a move task order ID.
  # @param move_task_order_id ID of move order to use.
  # @param [Hash] opts the optional parameters
  # @return [Customer]
  describe 'get_move_task_order_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_mto_post_counseling_information
  # Updates move task order&#39;s post counseling information
  # Updates move task order fields ppmType, ppmEstimatedWeight, and pointOfContact.
  # @param move_task_order_id ID of move task order to use.
  # @param body 
  # @param if_match Optimistic locking is implemented via the &#x60;If-Match&#x60; header. If the ETag header does not match the value of the resource on the server, the server rejects the change with a &#x60;412 Precondition Failed&#x60; error. 
  # @param [Hash] opts the optional parameters
  # @return [MoveTaskOrder]
  describe 'update_mto_post_counseling_information test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
